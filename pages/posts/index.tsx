import Head from 'next/head'
//import Image from 'next/image'
import Navbar from '../../components/Navbar'
import { gql, useQuery } from '@apollo/client'
import Pagination from "@choc-ui/paginator";
import { Box, chakra, Flex, Link, Image } from "@chakra-ui/react";
import React, { useState } from 'react';
import { useRouter } from 'next/router';


const allPostsQuery = gql`
  query allPostsQuery($first: Int, $offset: Int) {
    posts(first: $first, offset: $offset) {
      edges {
        node {
          tags {
            id
            name
          }
          imageUrl
          title
          content
          id
          author {
            name
          }
        }
      }
      aggregate {
        _count {
          _all
        }
      }
    }
  }
`;

export default function Home() {

  const router = useRouter()
  const [pageIndex, setPageIndex] = useState(1);

  const { loading, data, error, fetchMore } = useQuery(allPostsQuery, {
    variables: {
      first: 10,
      offset: 0
    },
    fetchPolicy: "cache-and-network"
  });

  function OnPageChange(pageNumber: number): void {
    setPageIndex(pageNumber)
    fetchMore({
      variables: {
        limit: 10,
        offset: pageNumber - 1
      },
    });
    router.push(`/posts?page=${pageNumber}`)
  }

  if (loading) return <p>Loading...</p>
  if (error) return <p>Oh no... {error.message}</p>
  
  return (
    <div className="#eef6fe">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar/>
      <main className="">
      <div className="container mx-auto shadow w-xl rounded mt-10">
        <div>placeholder</div>
      </div>
      <div className="container mx-auto max-w-6xl my-5">
        <ul className="grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 gap-5 place-items-center ">
          {data?.posts.edges.map(({node}: any, i: React.Key) => (
            <li key={i}>
            <Box
              mx="auto"
              rounded="md"
              border="1px"
              borderColor="#9a99c9"
              backgroundColor={"#55a0f3"}
              width="2xl"
              display="flex"
              className="transform hover:scale-105 transition duration-200 ease-in-out"
            >
              <Image
                rounded="sm"
                w={250}
                h={150}
                fit="cover"
                src={node.imageUrl}
                alt="Article"
                margin={0.5}
              />
              <Box p={6}>
                <Box>
                  <Link
                    display="block"
                    color={"white"}
                    fontWeight="bold"
                    fontSize="2xl"
                    mt={2}
                    _hover={{ color: "gray.600", textDecor: "underline" }}            
                  >
                    {node.title}
                  </Link>
                  {node?.tags.map(({tag}: any, i: React.Key) => (
                    <chakra.p
                      key={i}
                      mt={2}
                      fontSize="sm"
                      color={"gray.400"}
                    >
                      {node.tags[i]?.name}
                    </chakra.p>
                  ))}
                </Box>
                <Box mt={4}>
                  <Flex alignItems="center">
                    <Flex alignItems="center">
                      <Image
                        h={10}
                        fit="cover"
                        rounded="full"
                        src="https://images.unsplash.com/photo-1586287011575-a23134f797f9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=48&q=60"
                        alt="Avatar"
                      />
                      <Link
                        mx={2}
                        fontWeight="bold"
                        color={"gray.200"}
                      >
                        Jone Doe
                      </Link>
                    </Flex>
                      <chakra.span
                        mx={1}
                        fontSize="sm"
                        color={"gray.300"}
                      >
                        {node.author.name}
                      </chakra.span>
                    </Flex>
                  </Box>
                </Box>
              </Box>
            </li>
          ))}
        </ul>
      </div>
      <Flex
          w="full"
          p={5}
          alignItems="center"
          justifyContent="center"
        >
        <Pagination
          baseStyles={{ bg: "whiteAlpha.50" }}
          activeStyles={{ bg: "blueMunsell.100" }}
          defaultCurrent={pageIndex}
          total={data.posts.aggregate._count._all}
          paginationProps={{ display: "flex"}}
          pageNeighbours={3}
          responsive
          rounded="full"
          onChange={(pageNumber) => OnPageChange(pageNumber)}
        /> 
        </Flex>
      </main>
      <footer>
      </footer>
    </div>
  )
}
